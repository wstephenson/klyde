Part 1
systemctl shows state of all services
systemctl status <servicename> shows detailed state of individual

Part 2
'psc' alias shows ps output by control group

Part 3
Basic unit file technique.  Type tells systemd how to recognise a service has started, either traditionial daemon forking or by the presence of a dbus service, ordering and dependency constraints, Install section controls creation of symlinks in dir of referenced target so service is brought up by changing target.

Part 4
systemctl kill [-s SIGNAME] service to kill all processes started by a service

Part 5 
3 levels of stop: stop, disable, mask

Part 6
Running services in a chroot, filesystem namespaces, and nspawning a complete system inside a systemd container

Part 7
Startup time reporting, systemd-analyze blame, plot SVG

Part 8
Introduce standardized config files in /etc.  SUSE adoption lags, using patches
Part 9
Case that /etc/sysconfig and /etc/defaults are redundant. Workaround using EnvironmentFile= to read settings as env vars

Part 10
Instantiated services, and substituting instance names using generic service files

Part 11
Using systemd as xinetd replacement, configuring service to be started on demand

Part 12
Limit what services can do with systemd

Part 13
systemd journal

Part 14
Documentation metadata in unit files and how it is shown in status output

Part 15
Hardware and software watchdogs.  Could be used for buggy desktop services?

Part 16 
Gettys, on serial and virtual consoles

Part 17
Enabling systemd persistent journal, journalctl options for filtering

Part 18
Resource control, CPU, Memory and IO share weighting, analysis

Part 19
Ways to detect virtualization and control service execution depending on it

Part 20
Socket activated containers (services, VMs, ...) for efficient use of resources

Logind
Tracks and controls user sessions and seats. Replaces ConsoleKit. Can be used to see which processes and hardware are associated with a seat.  Responsible for spawning --user systemd instances, started see below.

Questions
=========

IDEAS
* kdeinit - could systemd --user be made to prelink things as kde does?
* Write an article systemd and logind for KDE developers
* autostarted apps via systemd - read desktop files
** KApps need to be started via kdeinit for performance
** Systemd plugin or helper process that works like kdeinit?
** XSMP systemd plugin?

NOTES
krandrrc stuff can be removed when kscreen is adopted
can defaults be read with systemd's /etc/ parser?

Existing Startup
=======

1) Check for existing session on this X display
2) Create startupconfigkeys and run kstartupconfig4 to read settings into env vars
3) set mouse theme
4) apply krandr settings
5) set force fonts dpi
6) run configured splash screen impl
7) Source env files
8) launch dbus if needed, test result
9) set KDE_SESSION_VERSION used by kfmclient in case it are running in a foreign kde version session KDE_FULL_SESSION KDE_SESSION_UID  used by kded 
10) start kdeinit
11) start ksmserver

Session is running

Wait for drkonqi instances, ask them to quit after 5s
Shutdown kdeinit4
Shutdown kdeinit3, dcopserver
Run shutdown scripts

Unset env vars


User session stuff
==================

systemctl --user enable creates symlinks in ~/.config, not system wide, like you'd want.

http://lists.freedesktop.org/archives/systemd-devel/2013-February/009119.html :
"One 'systemd --user' instance (as per systemd's TODO: started by logind using
user at .service, on behalf of pam_systemd) and one 'dbus-daemon --session'
instance (presumably started by that 'systemd --user')"

http://lists.freedesktop.org/archives/systemd-devel/2013-March/009405.html
Start of lennarts reply

http://lists.freedesktop.org/archives/systemd-devel/2013-March/009422.html : 
Summary by lennart of distinction between per-user systemd and per-session dbus-daemon

http://dantti.wordpress.com/2013/02/27/1-2-3-plasma/ Comment from Tom Gundersen

How can systemd tell existing services to do something, when they can perform phased actions?


Can systemd be extended with a plugin to make it be kdeinit?

Can a plugin do XSMP session management?

Q Can it do user-controlled autostart? Can it read unit files from user spec'd dirs?
A ~/.config/systemd/user according to user-session-units

How can it be configured to start different types of sessions, gnome/kde etc?
systemctl --user start kde.target (different targets)

How to install user unit so the dependencies are respected?

Logind instantiates only one user session per user, not per display.  This would prevent multiple desktop sessions on distinct displays.  

Systemd needs to be told when the process it starts for a unit exits while the service is still running.  This is the case for any kdeinit and any kwrapper-started programs.

PROGRESS
Packaged
xorg-launcher-helper
user-session-units

Needed to change xorg.service to start on :1
Needed to make xorg setuid (using checkstat --set /etc/permissions.easy
Needed to change user-session@.service to Environment=DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/%i/dbus/user_bus_socket
and start user session using UID otherwise logind creates /run/user/<UID> but systemd expands the %U to testuser, and /run/user/testuser does not exist

TODO
Build patched dbus